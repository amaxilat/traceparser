/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ParseOrPlotFrame.java
 *
 * Created on Jun 22, 2011, 5:23:34 PM
 */

package eu.amaxilatis.java.traceparser;

import eu.amaxilatis.java.traceparser.parsers.AbstractParser;
import eu.amaxilatis.java.traceparser.parsers.EventParser;
import eu.amaxilatis.java.traceparser.parsers.SendParser;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
              import java.util.Observable;
import java.util.Observer;
/**
 * @author amaxilatis
 */
public class TraceParserFrame extends javax.swing.JFrame implements ActionListener {


    /**
     * Creates new form TraceParserFrame
     */
    public TraceParserFrame() {
        log = new logger();
        log.setLevel(logger.EXTRA);
        initComponents();
        this.show();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();

        fileOptionsPanel = new javax.swing.JPanel();
        parserOptionsPanel = new javax.swing.JPanel();
        plotterOptionsPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileOptionsPanel.setLayout(new java.awt.GridLayout(1, 2, 10, 10));
        parserOptionsPanel.setLayout(new java.awt.GridLayout(3, 2, 10, 10));
        plotterOptionsPanel.setLayout(new java.awt.GridLayout(3, 2, 10, 10));

        generatePlotButton = new javax.swing.JButton("Generate Plot");
        generatePlotButton.addActionListener(this);

        generateFileButton = new javax.swing.JButton("Generate File");
        generateFileButton.addActionListener(this);

        selectedFileText = new JLabel();
        fileOptionsPanel.add(selectedFileText);
        setSize(fileOptionsPanel, 150, 40);

        openFileChooserButton = new JButton("Open File...");
        openFileChooserButton.addActionListener(this);
        setSize(openFileChooserButton, 150, 40);

        fileOptionsPanel.add(openFileChooserButton);


        final String[] parserOptionsTexts = {"Send;%s;%t;%d;", "Send;%s;%t;%d;", "Send;%s;%t;%d;"};
        final String[] parserOptionsLabels = {"Send Text", "Cluster Text", "Event Text"};
        for (int i = 0; i < 3; i++) {
            parserOptionsLabel[i] = new javax.swing.JLabel(parserOptionsLabels[i]);
            parserOptionsText[i] = new javax.swing.JTextField(parserOptionsTexts[i]);
            parserOptionsPanel.add(parserOptionsLabel[i]);
            parserOptionsPanel.add(parserOptionsText[i]);
        }


        jTabbedPane1.addTab("file Options", fileOptionsPanel);
        jTabbedPane1.addTab("Parser Options", parserOptionsPanel);
        jTabbedPane1.addTab("Plotter Options", plotterOptionsPanel);


        getContentPane().setLayout(new BorderLayout());
        final JPanel buttonsmain = new JPanel(new GridLayout(1, 2, 10, 10));
        buttonsmain.add(generateFileButton);
        buttonsmain.add(generatePlotButton);
        getContentPane().add(buttonsmain, BorderLayout.PAGE_END);
        jTabbedPane1.setPreferredSize(new Dimension(1000, 500));
        getContentPane().add(jTabbedPane1, BorderLayout.CENTER);

        pack();

        selectedFileText.setText("/home/amaxilatis/trace2.out");

    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TraceParserFrame().setVisible(true);

            }
        });
    }

    private void setSize(Component obj, int x, int y) {
        obj.setPreferredSize(new Dimension(x, y));
        obj.setMaximumSize(new Dimension(x, y));
        obj.setMinimumSize(new Dimension(x, y));

    }

    private void pressedGeneratePlot() {

    }

    private void pressedGenerateFile() {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables

    private logger log;

    private javax.swing.JButton generatePlotButton;
    private javax.swing.JButton generateFileButton;
    private JButton openFileChooserButton;

    private javax.swing.JPanel fileOptionsPanel;
    private javax.swing.JPanel plotterOptionsPanel;
    private javax.swing.JPanel parserOptionsPanel;

    private javax.swing.JLabel[] parserOptionsLabel = new javax.swing.JLabel[3];
    private javax.swing.JTextField[] parserOptionsText = new javax.swing.JTextField[3];
    private javax.swing.JLabel selectedFileText;
    private javax.swing.JTabbedPane jTabbedPane1;

    // End of variables declaration//GEN-END:variables

    public void actionPerformed(ActionEvent actionEvent) {
        //To change body of implemented methods use File | Settings | File Templates.
        final Object e = actionEvent.getSource();
        if (e.equals(generatePlotButton)) {
            JFrame jf = new JFrame("Plot");
            jf.setVisible(true);
            log.debug("not implemented yet!" + ((javax.swing.JButton) e).getText());
        } else if (e.equals(generateFileButton)) {
            TraceReader tracereader = new TraceReader(log,selectedFileText.getText());
            tracereader.addObserver(new SendParser());
            tracereader.addObserver(new EventParser());
            tracereader.run();

            //final Thread thr = new Thread(tracereader);
            //thr.start();

            //log.debug("not implemented yet!" + ((javax.swing.JButton) e).getText());

        } else if ((e.equals(openFileChooserButton)) || ((e.equals(selectedFileText)))) {
            JFileChooser chooser = new JFileChooser("~/");
            chooser.setDialogTitle("Select File name to Save the plot");
            int returnVal = chooser.showOpenDialog(chooser);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                if (chooser.getSelectedFile().canRead()) {
                    final String filename2open = chooser.getSelectedFile().getAbsolutePath();
                    log.debug("opening " + filename2open);
                    selectedFileText.setText(filename2open);
                }
            }

        }
    }

}

